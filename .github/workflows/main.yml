name: BookTi API CI Pipeline

on:
  push:
    branches: [ 'dev', 'prod' ]
    paths:
      - src/**
      - 'Dockerfile'
      - .github/workflows/**
  pull_request:
    branches: [ 'dev', 'prod' ]

jobs:
  compile:
    runs-on: ubuntu-latest
    name: Compile project
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Compile project
        run: |
          ./mvnw clean compile

  unit-tests:
    runs-on: ubuntu-latest
    name: Unit tests
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Run Unit tests
        env:
          cloudinary-cloud-name: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
          cloudinary-api-key: ${{ secrets.CLOUDINARY_API_KEY }}
          cloudinary-api-secret: ${{ secrets.CLOUDINARY_API_SECRET }}
          google-client-id: ${{ secrets.GOOGLE_CLIENT_ID }}
          google-client-secret: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          mail-host: ${{ secrets.MAIL_HOST }}
          mail-port: ${{ secrets.MAIL_PORT }}
          mail-username: ${{ secrets.MAIL_USERNAME }}
          mail-password: ${{ secrets.MAIL_PASSWORD }}
        run: |
          ./mvnw clean test

  test-coverage:
    runs-on: ubuntu-latest
    name: Running tests with coverage
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'
      - name: Maven Verify
        run: mvn -B clean verify
      - name: Test Coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  checkstyle:
    runs-on: ubuntu-latest
    name: Checkstyle
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'
      - name: Checkstyle for Java
        uses: dbelyaev/action-checkstyle@v1.2.1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-check
          checkstyle_config: checkstyle.xml
          level: warning
          workdir: 'src/main/java'

  build:
    runs-on: ubuntu-latest
    name: Build project
    needs: [ compile, unit-tests, checkstyle, test-coverage ]
    steps:
      - uses: actions/checkout@v4
      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Build with Maven
        run: | 
          ./mvnw clean package --file pom.xml
